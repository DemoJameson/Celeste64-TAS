<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <Platforms>x64</Platforms>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <Version>1.0.1</Version>
        <PublishSingleFile>false</PublishSingleFile>
        <PublishTrimmed>false</PublishTrimmed>
        <SelfContained>true</SelfContained>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="FosterFramework" Version="0.1.17-alpha" Publicize="true" />
        <PackageReference Include="SharpGLTF.Runtime" Version="1.0.0-alpha0031" />
        <PackageReference Include="Sledge.Formats.Map" Version="1.1.5" />

        <PackageReference Include="MonoMod.RuntimeDetour" Version="25.1.0-prerelease.2" />
        <PackageReference Include="ImGui.NET" Version="1.90.1.1" />
        <PackageReference Include="NativeFileDialogSharp" Version="0.5.0" />
        <PackageReference Include="EmbeddedBuildProperty" Version="1.0.0" />
        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1" PrivateAssets="all" />
    </ItemGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([MSBuild]::IsOSPlatform('Linux'))) or $(RuntimeIdentifier.StartsWith('linux'))">
        <IsLinux>true</IsLinux>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([MSBuild]::IsOSPlatform('Windows'))) or $(RuntimeIdentifier.StartsWith('win'))">
        <IsWindows>true</IsWindows>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([MSBuild]::IsOSPlatform('OSX'))) or $(RuntimeIdentifier.StartsWith('osx'))">
        <IsMacOS>true</IsMacOS>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'x64') or $(RuntimeIdentifier.EndsWith('x64'))">
        <PlatformTarget>x64</PlatformTarget>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'Arm64') or $(RuntimeIdentifier.EndsWith('arm64'))">
        <IsArm64>true</IsArm64>
        <PlatformTarget>ARM64</PlatformTarget>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'Arm') or $(RuntimeIdentifier.EndsWith('arm'))">
        <IsArm>true</IsArm>
        <PlatformTarget>ARM</PlatformTarget>
    </PropertyGroup>

    <ItemGroup Condition="$(IsLinux) == 'true' and $(IsArm64) == 'true'">
        <Content Include="Source/Audio/FMOD/libs/libarm64/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup Condition="$(IsLinux) == 'true' and $(IsArm) == 'true'">
        <Content Include="Source/Audio/FMOD/libs/libarm/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup Condition="$(IsLinux) == 'true' and $(IsArm64) != 'true' and $(IsArm) != 'true'">
        <Content Include="Source/Audio/FMOD/libs/lib64/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup Condition="$(IsWindows) == 'true'">
        <Content Include="Source/Audio/FMOD/libs/x64/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup Condition="$(IsMacOS) == 'true'">
        <Content Include="Source/Audio/FMOD/libs/osx/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    </ItemGroup>

</Project>
